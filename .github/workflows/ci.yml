name: Pipeline CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  frontend-ci:
    name: Pipeline Integração Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-frontend
      
    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Frontend
        run: npm run build
  backend-ci:
    name: Pipeline Integração Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-backend

    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Backend
        run: npm run build
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [frontend-ci, backend-ci]

    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Docker Build
        uses: docker/build-push-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build e Push da Imagem Docker Marmitify
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/marmitify:latest
            ${{ secrets.DOCKER_USERNAME }}/marmitify:${{ github.sha }}
  release:
    name: Criar Tag e Release
    runs-on: ubuntu-latest
    needs: [docker-build] 
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Criar Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.run_number }}"
          name: "Release v${{ github.run_number }}"
          body: "Release do Marmitify"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}