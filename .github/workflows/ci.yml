name: Pipeline CI

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  frontend-ci:
    name: Pipeline Integração Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-frontend

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Frontend
        run: npm run build
  backend-ci:
    name: Pipeline Integração Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-backend

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Backend
        run: npm run build

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [frontend-ci, backend-ci]

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Instalação Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build e Push da Imagem Docker Marmitify
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/${{secrets.GCP_PROJECT_ID}}/marmitify/marmitify:latest .
          docker push us-central1-docker.pkg.dev/${{secrets.GCP_PROJECT_ID}}/marmitify/marmitify:latest

  deploy-gke:
    name: Deploy no GKE
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - name: Configurar kubectl
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: marmitify-deploy-cluster
          location: us-central1-c
      - name: Aplicar manifestos Kubernetes
        run: kubectl apply -f k8s/

  release:
    name: Criar Tag e Release
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Criar Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.run_number }}"
          name: "Release v${{ github.run_number }}"
          body: "Release do Marmitify"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
