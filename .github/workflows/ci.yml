name: Pipeline CI

on:
  push:
    branches-ignore:
      - main

jobs:
  frontend-ci:
    name: Pipeline Integração Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-frontend
      
    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Frontend
        run: npm run build
  backend-ci:
    name: Pipeline Integração Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./marmitify-backend

    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Instalação de dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Build do Backend
        run: npm run build
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [frontend-ci, backend-ci]

    steps:
      - name:  Checkout código
        uses: actions/checkout@v2

      - name: Configurar Docker Build
        uses: docker/build-push-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build e Push da Imagem Docker Marmitify
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/marmitify:latest
            ${{ secrets.DOCKER_USERNAME }}/marmitify:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 